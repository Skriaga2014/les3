def par(a, b, c, d):                                # Функция определения параллелограмма
    def line(a,b):                                  # Подфункция вычисления синуса наклона прямой
        if a[0] > b[0]:
            a,b = b,a
        ab = [0,0]
        ab[0] = b[0] - a[0]                         # Находим разницу в координатах
        ab[1] = b[1] - a[1]
        lenn = (ab[0]**2+ab[1]**2)**0.5             # С помощью теоремы Пифагора вычисляем длину между точками
        sin = ab[1]/lenn                            # Вычисляем синус
        if sin == -1: sin = 1                       # Прямые под углом "синус = 1" и "синус = -1" являются параллельными
        return sin                                  # Возвращает синус

    list = [line(a,b), line(a,c), line(a,d),        # Создаем список синусов прямых между всеми парами точек
            line(b,c), line(b,d), line(c,d)]

    povtor = []                                     # Создаем список повторяющихся синусов из списка list
    for n in list:
        if list.count(n) > 1 and povtor.count(n) == 0:
            povtor.append(n)

    if len(povtor) == 2: return "Точки являются вершинами параллелограмма"  # Если повторяющихся синусов 2, значит у нас
                                                                            # 2 пары параллельных прямых и точки являются
                                                                            # вершинами параллелограмма.

    return "Точки НЕ являются вершинами параллелограмма"                    # В противном случае точки не являются
                                                                            # вершинами параллерограмма

print(par([1,2],[5,1],[7,3],[3,4]))                 #параллелограмм
print(par([2,-3],[6,-4],[8,-2],[4,-1]))             #параллелограмм
print(par([-7,-2],[-5,-1],[-1,-2],[-5,-3]))         #дельтоид
print(par([1,2],[3,4],[5,1],[7,3]))                 #параллелограмм
print(par([1,1],[4,4],[1,4],[4,1]))                 #квадрат
print(par([0,-1],[-1,1],[0,3],[1,1]))               #ромб
print(par([0,-1],[-1,0],[0,3],[1,1]))               #не пойми что
print(par([1,-2],[4,0],[7,-2],[4,-3]))              #дельтоид

##